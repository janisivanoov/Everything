#include <iostream>
#include <typeinfo>
using namespace std;
class Base {
	virtual void vertFunc(){ }
};
class Derv1: public Base{ };
class Derv2: public Base{ };
bool isDerv1(Base* pUnkno) {
	Derv1* pDerv1;
	if (pDerv1 = dynamic_cast<Derv1*>(pUnknown)) {
		return true;
	}
	else {
		return false;
	}
}
int main() {
	system("chcp 1251 > nul");
	Derv1* d1 = new Derv1;
	Derv2* d2 = new Derv2;
	if (isDerv1(d1)) {
		cout << "d1 component class Derv1" << endl;
	}
	else {
		cout << "d1 isnt a component of class Derv1" << endl;
	}
	if (isDerv1(d2)) {
		cout << "d2 is component of class Derv1" << endl;
	} 
	else {
		cout << "d2 isnt a component of class Derv1" << endl;
	}
	system("pause > nul");
	return 0;
}
